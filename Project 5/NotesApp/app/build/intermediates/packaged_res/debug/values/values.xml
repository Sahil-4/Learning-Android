<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:ns1="http://schemas.android.com/tools">
    <color name="black">#FF000000</color>
    <color name="purple_200">#FFBB86FC</color>
    <color name="purple_500">#FF6200EE</color>
    <color name="purple_700">#FF3700B3</color>
    <color name="teal_200">#FF03DAC5</color>
    <color name="teal_700">#FF018786</color>
    <color name="white">#FFFFFFFF</color>
    <string name="add_note">Add Note</string>
    <string name="add_widget">Add widget</string>
    <string name="app_name">Notes App</string>
    <string name="app_widget_description">This is an app widget description</string>
    <string name="appwidget_text">EXAMPLE</string>
    <string name="back">Back</string>
    <string name="cancel">Cancel</string>
    <string name="color">color</string>
    <string name="delete">Delete</string>
    <string name="delete_notes">Delete Notes</string>
    <string name="description">Description</string>
    <string name="edit">Edit</string>
    <string name="edit_notes">Edit Notes</string>
    <string name="note">Note</string>
    <string name="sample_description">sample description App widgets are miniature application views that can be embedded in other applications (such as the home screen) and receive periodic updates. These views are referred to as widgets in the user interface, and you can publish one with an app widget provider (or widget provider). An app component that is able to hold other widgets is called an app widget host (or widget host). The following example shows a music widget</string>
    <string name="sample_title">Sample title</string>
    <string name="save">Save</string>
    <string name="share">Share</string>
    <string name="title">Title</string>
    <string name="toggle_dark_mode">Toggle Dark Mode</string>
    <style name="Theme.NotesApp" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        
        <item name="colorPrimary">@color/purple_500</item>
        <item name="colorPrimaryVariant">@color/purple_700</item>
        <item name="colorOnPrimary">@color/white</item>
        
        <item name="colorSecondary">@color/teal_200</item>
        <item name="colorSecondaryVariant">@color/teal_700</item>
        <item name="colorOnSecondary">@color/black</item>
        
        <item name="android:statusBarColor" ns1:targetApi="l">?attr/colorPrimaryVariant</item>
        
    </style>
</resources>